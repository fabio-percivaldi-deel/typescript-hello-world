import { QueryInterface } from 'sequelize';

/**
 * Instructions (https://wiki.deel.network/en/deel-workspace/engineering/teams/database/postgres/DB-Best-Practices)
 * =============
 * Separate modifying different tables to different transactions/migrations - to avoid potential deadlocks
 * Avoid long-running migrations - use a runtime_script instead
 * Comment all new/modified tables and columns. Add the `SENSITIVE` tag and anonymize sensitive columns (https://wiki.deel.network/en/deel-workspace/engineering/teams/database/postgres/DBDocs#sensitive-columns)
 * Use lower_snake_case for table, column and any other object name. Table names should be last-word-plural
 * Use the proper data type, for strings set an appropriate size limit
 * Any change you make in the migration must reflect in the model and vice versa - they must be aligned
* */
export const up = async (queryInterface: QueryInterface) => {
  /**
   * QUERY INTERFACE
    await queryInterface.addColumn(
      {
        tableName: 'benefit_dependents',
        schema:    'benefits'
      },
      'test_column_name',
      {
        type:      DataTypes.INTEGER,
        allowNull: true
      }
    );

   * RAW QUERY
    await queryInterface.sequelize.query(`
      ALTER TABLE benefits.benefit_dependents
      ADD COLUMN test_column_name BOOLEAN;
    `);
  */

};

export const down = async (queryInterface: QueryInterface) => {

};
